// Mocks generated by Mockito 5.4.4 from annotations
// in task_management/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i7;

import 'package:flutter/cupertino.dart' as _i8;
import 'package:get/get.dart' as _i2;
import 'package:get/get_connect/http/src/interceptors/get_modifiers.dart'
    as _i9;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:task_management/app/data/services/apiService/api_services.dart'
    as _i3;
import 'package:task_management/app/modules/auth/sign_up/sign_up_controller.dart'
    as _i13;
import 'package:task_management/app/modules/auth/signIn/sign_in_controller.dart'
    as _i10;
import 'package:task_management/components/custom_button.dart' as _i11;
import 'package:task_management/helpers/Utils/common_functions.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDuration_0 extends _i1.SmartFake implements Duration {
  _FakeDuration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetHttpClient_1 extends _i1.SmartFake implements _i2.GetHttpClient {
  _FakeGetHttpClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_2<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_3<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetSocket_4 extends _i1.SmartFake implements _i2.GetSocket {
  _FakeGetSocket_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGraphQLResponse_5<T1> extends _i1.SmartFake
    implements _i2.GraphQLResponse<T1> {
  _FakeGraphQLResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRx_6<T> extends _i1.SmartFake implements _i2.Rx<T> {
  _FakeRx_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxBool_7 extends _i1.SmartFake implements _i2.RxBool {
  _FakeRxBool_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert => (super.noSuchMethod(
        Invocation.getter(#allowAutoSignedCert),
        returnValue: false,
      ) as bool);

  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
        Invocation.setter(
          #allowAutoSignedCert,
          _allowAutoSignedCert,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get userAgent => (super.noSuchMethod(
        Invocation.getter(#userAgent),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#userAgent),
        ),
      ) as String);

  @override
  set userAgent(String? _userAgent) => super.noSuchMethod(
        Invocation.setter(
          #userAgent,
          _userAgent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get sendUserAgent => (super.noSuchMethod(
        Invocation.getter(#sendUserAgent),
        returnValue: false,
      ) as bool);

  @override
  set sendUserAgent(bool? _sendUserAgent) => super.noSuchMethod(
        Invocation.setter(
          #sendUserAgent,
          _sendUserAgent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set baseUrl(String? _baseUrl) => super.noSuchMethod(
        Invocation.setter(
          #baseUrl,
          _baseUrl,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get defaultContentType => (super.noSuchMethod(
        Invocation.getter(#defaultContentType),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#defaultContentType),
        ),
      ) as String);

  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
        Invocation.setter(
          #defaultContentType,
          _defaultContentType,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get followRedirects => (super.noSuchMethod(
        Invocation.getter(#followRedirects),
        returnValue: false,
      ) as bool);

  @override
  set followRedirects(bool? _followRedirects) => super.noSuchMethod(
        Invocation.setter(
          #followRedirects,
          _followRedirects,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get maxRedirects => (super.noSuchMethod(
        Invocation.getter(#maxRedirects),
        returnValue: 0,
      ) as int);

  @override
  set maxRedirects(int? _maxRedirects) => super.noSuchMethod(
        Invocation.setter(
          #maxRedirects,
          _maxRedirects,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get maxAuthRetries => (super.noSuchMethod(
        Invocation.getter(#maxAuthRetries),
        returnValue: 0,
      ) as int);

  @override
  set maxAuthRetries(int? _maxAuthRetries) => super.noSuchMethod(
        Invocation.setter(
          #maxAuthRetries,
          _maxAuthRetries,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set defaultDecoder(_i2.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(
        Invocation.setter(
          #defaultDecoder,
          _defaultDecoder,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Duration get timeout => (super.noSuchMethod(
        Invocation.getter(#timeout),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#timeout),
        ),
      ) as Duration);

  @override
  set timeout(Duration? _timeout) => super.noSuchMethod(
        Invocation.setter(
          #timeout,
          _timeout,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set trustedCertificates(List<_i2.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
        Invocation.setter(
          #trustedCertificates,
          _trustedCertificates,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set findProxy(String Function(Uri)? _findProxy) => super.noSuchMethod(
        Invocation.setter(
          #findProxy,
          _findProxy,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get withCredentials => (super.noSuchMethod(
        Invocation.getter(#withCredentials),
        returnValue: false,
      ) as bool);

  @override
  set withCredentials(bool? _withCredentials) => super.noSuchMethod(
        Invocation.setter(
          #withCredentials,
          _withCredentials,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i2.GetSocket> get sockets => (super.noSuchMethod(
        Invocation.getter(#sockets),
        returnValue: <_i2.GetSocket>[],
      ) as List<_i2.GetSocket>);

  @override
  _i2.GetHttpClient get httpClient => (super.noSuchMethod(
        Invocation.getter(#httpClient),
        returnValue: _FakeGetHttpClient_1(
          this,
          Invocation.getter(#httpClient),
        ),
      ) as _i2.GetHttpClient);

  @override
  bool get isDisposed => (super.noSuchMethod(
        Invocation.getter(#isDisposed),
        returnValue: false,
      ) as bool);

  @override
  set sockets(List<_i2.GetSocket>? _sockets) => super.noSuchMethod(
        Invocation.setter(
          #sockets,
          _sockets,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<_i2.Response<dynamic>> getData() => (super.noSuchMethod(
        Invocation.method(
          #getData,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_3<dynamic>(
          this,
          Invocation.method(
            #getData,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);

  @override
  _i5.Future<_i2.Response<dynamic>> makeApiCall(
    String? baseUrl,
    String? method, {
    dynamic params,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #makeApiCall,
          [
            baseUrl,
            method,
          ],
          {
            #params: params,
            #headers: headers,
          },
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_3<dynamic>(
          this,
          Invocation.method(
            #makeApiCall,
            [
              baseUrl,
              method,
            ],
            {
              #params: params,
              #headers: headers,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);

  @override
  _i5.Future<_i2.Response<T>> get<T>(
    String? url, {
    Map<String, String>? headers,
    String? contentType,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {
            #headers: headers,
            #contentType: contentType,
            #query: query,
            #decoder: decoder,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #headers: headers,
              #contentType: contentType,
              #query: query,
              #decoder: decoder,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> post<T>(
    String? url,
    dynamic body, {
    String? contentType,
    Map<String, String>? headers,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
    _i2.Progress? uploadProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            url,
            body,
          ],
          {
            #contentType: contentType,
            #headers: headers,
            #query: query,
            #decoder: decoder,
            #uploadProgress: uploadProgress,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #post,
            [
              url,
              body,
            ],
            {
              #contentType: contentType,
              #headers: headers,
              #query: query,
              #decoder: decoder,
              #uploadProgress: uploadProgress,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> put<T>(
    String? url,
    dynamic body, {
    String? contentType,
    Map<String, String>? headers,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
    _i2.Progress? uploadProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            url,
            body,
          ],
          {
            #contentType: contentType,
            #headers: headers,
            #query: query,
            #decoder: decoder,
            #uploadProgress: uploadProgress,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #put,
            [
              url,
              body,
            ],
            {
              #contentType: contentType,
              #headers: headers,
              #query: query,
              #decoder: decoder,
              #uploadProgress: uploadProgress,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> patch<T>(
    String? url,
    dynamic body, {
    String? contentType,
    Map<String, String>? headers,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
    _i2.Progress? uploadProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [
            url,
            body,
          ],
          {
            #contentType: contentType,
            #headers: headers,
            #query: query,
            #decoder: decoder,
            #uploadProgress: uploadProgress,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #patch,
            [
              url,
              body,
            ],
            {
              #contentType: contentType,
              #headers: headers,
              #query: query,
              #decoder: decoder,
              #uploadProgress: uploadProgress,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> request<T>(
    String? url,
    String? method, {
    dynamic body,
    String? contentType,
    Map<String, String>? headers,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
    _i2.Progress? uploadProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [
            url,
            method,
          ],
          {
            #body: body,
            #contentType: contentType,
            #headers: headers,
            #query: query,
            #decoder: decoder,
            #uploadProgress: uploadProgress,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #request,
            [
              url,
              method,
            ],
            {
              #body: body,
              #contentType: contentType,
              #headers: headers,
              #query: query,
              #decoder: decoder,
              #uploadProgress: uploadProgress,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> delete<T>(
    String? url, {
    Map<String, String>? headers,
    String? contentType,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #contentType: contentType,
            #query: query,
            #decoder: decoder,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #contentType: contentType,
              #query: query,
              #decoder: decoder,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i2.GetSocket socket(
    String? url, {
    Duration? ping = const Duration(seconds: 5),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #socket,
          [url],
          {#ping: ping},
        ),
        returnValue: _FakeGetSocket_4(
          this,
          Invocation.method(
            #socket,
            [url],
            {#ping: ping},
          ),
        ),
      ) as _i2.GetSocket);

  @override
  _i5.Future<_i2.GraphQLResponse<T>> query<T>(
    String? query, {
    String? url,
    Map<String, dynamic>? variables,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [query],
          {
            #url: url,
            #variables: variables,
            #headers: headers,
          },
        ),
        returnValue:
            _i5.Future<_i2.GraphQLResponse<T>>.value(_FakeGraphQLResponse_5<T>(
          this,
          Invocation.method(
            #query,
            [query],
            {
              #url: url,
              #variables: variables,
              #headers: headers,
            },
          ),
        )),
      ) as _i5.Future<_i2.GraphQLResponse<T>>);

  @override
  _i5.Future<_i2.GraphQLResponse<T>> mutation<T>(
    String? mutation, {
    String? url,
    Map<String, dynamic>? variables,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #mutation,
          [mutation],
          {
            #url: url,
            #variables: variables,
            #headers: headers,
          },
        ),
        returnValue:
            _i5.Future<_i2.GraphQLResponse<T>>.value(_FakeGraphQLResponse_5<T>(
          this,
          Invocation.method(
            #mutation,
            [mutation],
            {
              #url: url,
              #variables: variables,
              #headers: headers,
            },
          ),
        )),
      ) as _i5.Future<_i2.GraphQLResponse<T>>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CommonFunctions].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommonFunctions extends _i1.Mock implements _i6.CommonFunctions {
  MockCommonFunctions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  dynamic deleteAllTask({required _i7.VoidCallback? onDelete}) =>
      super.noSuchMethod(Invocation.method(
        #deleteAllTask,
        [],
        {#onDelete: onDelete},
      ));

  @override
  _i5.Future<void> showLoadingDialog({bool? isCancellable = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #showLoadingDialog,
          [],
          {#isCancellable: isCancellable},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void showSnackBar({
    _i7.Color? backgroundColor,
    required String? message,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showSnackBar,
          [],
          {
            #backgroundColor: backgroundColor,
            #message: message,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void cupertinoDialog(
    _i8.BuildContext? context, {
    String? dialogTitle = r'',
    String? dialogDesc = r'',
    String? dialogConfirmTitle = r'',
    List<_i8.Widget>? widgets,
    bool? barrierDismissible = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #cupertinoDialog,
          [context],
          {
            #dialogTitle: dialogTitle,
            #dialogDesc: dialogDesc,
            #dialogConfirmTitle: dialogConfirmTitle,
            #widgets: widgets,
            #barrierDismissible: barrierDismissible,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [GetConnect].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetConnect extends _i1.Mock implements _i2.GetConnect {
  MockGetConnect() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert => (super.noSuchMethod(
        Invocation.getter(#allowAutoSignedCert),
        returnValue: false,
      ) as bool);

  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
        Invocation.setter(
          #allowAutoSignedCert,
          _allowAutoSignedCert,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get userAgent => (super.noSuchMethod(
        Invocation.getter(#userAgent),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#userAgent),
        ),
      ) as String);

  @override
  set userAgent(String? _userAgent) => super.noSuchMethod(
        Invocation.setter(
          #userAgent,
          _userAgent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get sendUserAgent => (super.noSuchMethod(
        Invocation.getter(#sendUserAgent),
        returnValue: false,
      ) as bool);

  @override
  set sendUserAgent(bool? _sendUserAgent) => super.noSuchMethod(
        Invocation.setter(
          #sendUserAgent,
          _sendUserAgent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set baseUrl(String? _baseUrl) => super.noSuchMethod(
        Invocation.setter(
          #baseUrl,
          _baseUrl,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get defaultContentType => (super.noSuchMethod(
        Invocation.getter(#defaultContentType),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#defaultContentType),
        ),
      ) as String);

  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
        Invocation.setter(
          #defaultContentType,
          _defaultContentType,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get followRedirects => (super.noSuchMethod(
        Invocation.getter(#followRedirects),
        returnValue: false,
      ) as bool);

  @override
  set followRedirects(bool? _followRedirects) => super.noSuchMethod(
        Invocation.setter(
          #followRedirects,
          _followRedirects,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get maxRedirects => (super.noSuchMethod(
        Invocation.getter(#maxRedirects),
        returnValue: 0,
      ) as int);

  @override
  set maxRedirects(int? _maxRedirects) => super.noSuchMethod(
        Invocation.setter(
          #maxRedirects,
          _maxRedirects,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get maxAuthRetries => (super.noSuchMethod(
        Invocation.getter(#maxAuthRetries),
        returnValue: 0,
      ) as int);

  @override
  set maxAuthRetries(int? _maxAuthRetries) => super.noSuchMethod(
        Invocation.setter(
          #maxAuthRetries,
          _maxAuthRetries,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set defaultDecoder(_i2.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(
        Invocation.setter(
          #defaultDecoder,
          _defaultDecoder,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Duration get timeout => (super.noSuchMethod(
        Invocation.getter(#timeout),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#timeout),
        ),
      ) as Duration);

  @override
  set timeout(Duration? _timeout) => super.noSuchMethod(
        Invocation.setter(
          #timeout,
          _timeout,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set trustedCertificates(List<_i2.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
        Invocation.setter(
          #trustedCertificates,
          _trustedCertificates,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set findProxy(String Function(Uri)? _findProxy) => super.noSuchMethod(
        Invocation.setter(
          #findProxy,
          _findProxy,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get withCredentials => (super.noSuchMethod(
        Invocation.getter(#withCredentials),
        returnValue: false,
      ) as bool);

  @override
  set withCredentials(bool? _withCredentials) => super.noSuchMethod(
        Invocation.setter(
          #withCredentials,
          _withCredentials,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i2.GetSocket> get sockets => (super.noSuchMethod(
        Invocation.getter(#sockets),
        returnValue: <_i2.GetSocket>[],
      ) as List<_i2.GetSocket>);

  @override
  _i2.GetHttpClient get httpClient => (super.noSuchMethod(
        Invocation.getter(#httpClient),
        returnValue: _FakeGetHttpClient_1(
          this,
          Invocation.getter(#httpClient),
        ),
      ) as _i2.GetHttpClient);

  @override
  bool get isDisposed => (super.noSuchMethod(
        Invocation.getter(#isDisposed),
        returnValue: false,
      ) as bool);

  @override
  set sockets(List<_i2.GetSocket>? _sockets) => super.noSuchMethod(
        Invocation.setter(
          #sockets,
          _sockets,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<_i2.Response<T>> get<T>(
    String? url, {
    Map<String, String>? headers,
    String? contentType,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {
            #headers: headers,
            #contentType: contentType,
            #query: query,
            #decoder: decoder,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #headers: headers,
              #contentType: contentType,
              #query: query,
              #decoder: decoder,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> post<T>(
    String? url,
    dynamic body, {
    String? contentType,
    Map<String, String>? headers,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
    _i2.Progress? uploadProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            url,
            body,
          ],
          {
            #contentType: contentType,
            #headers: headers,
            #query: query,
            #decoder: decoder,
            #uploadProgress: uploadProgress,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #post,
            [
              url,
              body,
            ],
            {
              #contentType: contentType,
              #headers: headers,
              #query: query,
              #decoder: decoder,
              #uploadProgress: uploadProgress,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> put<T>(
    String? url,
    dynamic body, {
    String? contentType,
    Map<String, String>? headers,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
    _i2.Progress? uploadProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            url,
            body,
          ],
          {
            #contentType: contentType,
            #headers: headers,
            #query: query,
            #decoder: decoder,
            #uploadProgress: uploadProgress,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #put,
            [
              url,
              body,
            ],
            {
              #contentType: contentType,
              #headers: headers,
              #query: query,
              #decoder: decoder,
              #uploadProgress: uploadProgress,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> patch<T>(
    String? url,
    dynamic body, {
    String? contentType,
    Map<String, String>? headers,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
    _i2.Progress? uploadProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [
            url,
            body,
          ],
          {
            #contentType: contentType,
            #headers: headers,
            #query: query,
            #decoder: decoder,
            #uploadProgress: uploadProgress,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #patch,
            [
              url,
              body,
            ],
            {
              #contentType: contentType,
              #headers: headers,
              #query: query,
              #decoder: decoder,
              #uploadProgress: uploadProgress,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> request<T>(
    String? url,
    String? method, {
    dynamic body,
    String? contentType,
    Map<String, String>? headers,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
    _i2.Progress? uploadProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [
            url,
            method,
          ],
          {
            #body: body,
            #contentType: contentType,
            #headers: headers,
            #query: query,
            #decoder: decoder,
            #uploadProgress: uploadProgress,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #request,
            [
              url,
              method,
            ],
            {
              #body: body,
              #contentType: contentType,
              #headers: headers,
              #query: query,
              #decoder: decoder,
              #uploadProgress: uploadProgress,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> delete<T>(
    String? url, {
    Map<String, String>? headers,
    String? contentType,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #contentType: contentType,
            #query: query,
            #decoder: decoder,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #contentType: contentType,
              #query: query,
              #decoder: decoder,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i2.GetSocket socket(
    String? url, {
    Duration? ping = const Duration(seconds: 5),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #socket,
          [url],
          {#ping: ping},
        ),
        returnValue: _FakeGetSocket_4(
          this,
          Invocation.method(
            #socket,
            [url],
            {#ping: ping},
          ),
        ),
      ) as _i2.GetSocket);

  @override
  _i5.Future<_i2.GraphQLResponse<T>> query<T>(
    String? query, {
    String? url,
    Map<String, dynamic>? variables,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [query],
          {
            #url: url,
            #variables: variables,
            #headers: headers,
          },
        ),
        returnValue:
            _i5.Future<_i2.GraphQLResponse<T>>.value(_FakeGraphQLResponse_5<T>(
          this,
          Invocation.method(
            #query,
            [query],
            {
              #url: url,
              #variables: variables,
              #headers: headers,
            },
          ),
        )),
      ) as _i5.Future<_i2.GraphQLResponse<T>>);

  @override
  _i5.Future<_i2.GraphQLResponse<T>> mutation<T>(
    String? mutation, {
    String? url,
    Map<String, dynamic>? variables,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #mutation,
          [mutation],
          {
            #url: url,
            #variables: variables,
            #headers: headers,
          },
        ),
        returnValue:
            _i5.Future<_i2.GraphQLResponse<T>>.value(_FakeGraphQLResponse_5<T>(
          this,
          Invocation.method(
            #mutation,
            [mutation],
            {
              #url: url,
              #variables: variables,
              #headers: headers,
            },
          ),
        )),
      ) as _i5.Future<_i2.GraphQLResponse<T>>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [GetHttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetHttpClient extends _i1.Mock implements _i2.GetHttpClient {
  MockGetHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get userAgent => (super.noSuchMethod(
        Invocation.getter(#userAgent),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#userAgent),
        ),
      ) as String);

  @override
  set userAgent(String? _userAgent) => super.noSuchMethod(
        Invocation.setter(
          #userAgent,
          _userAgent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set baseUrl(String? _baseUrl) => super.noSuchMethod(
        Invocation.setter(
          #baseUrl,
          _baseUrl,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get defaultContentType => (super.noSuchMethod(
        Invocation.getter(#defaultContentType),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#defaultContentType),
        ),
      ) as String);

  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
        Invocation.setter(
          #defaultContentType,
          _defaultContentType,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get followRedirects => (super.noSuchMethod(
        Invocation.getter(#followRedirects),
        returnValue: false,
      ) as bool);

  @override
  set followRedirects(bool? _followRedirects) => super.noSuchMethod(
        Invocation.setter(
          #followRedirects,
          _followRedirects,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get maxRedirects => (super.noSuchMethod(
        Invocation.getter(#maxRedirects),
        returnValue: 0,
      ) as int);

  @override
  set maxRedirects(int? _maxRedirects) => super.noSuchMethod(
        Invocation.setter(
          #maxRedirects,
          _maxRedirects,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get maxAuthRetries => (super.noSuchMethod(
        Invocation.getter(#maxAuthRetries),
        returnValue: 0,
      ) as int);

  @override
  set maxAuthRetries(int? _maxAuthRetries) => super.noSuchMethod(
        Invocation.setter(
          #maxAuthRetries,
          _maxAuthRetries,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get sendUserAgent => (super.noSuchMethod(
        Invocation.getter(#sendUserAgent),
        returnValue: false,
      ) as bool);

  @override
  set sendUserAgent(bool? _sendUserAgent) => super.noSuchMethod(
        Invocation.setter(
          #sendUserAgent,
          _sendUserAgent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set defaultDecoder(_i2.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(
        Invocation.setter(
          #defaultDecoder,
          _defaultDecoder,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Duration get timeout => (super.noSuchMethod(
        Invocation.getter(#timeout),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#timeout),
        ),
      ) as Duration);

  @override
  set timeout(Duration? _timeout) => super.noSuchMethod(
        Invocation.setter(
          #timeout,
          _timeout,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get errorSafety => (super.noSuchMethod(
        Invocation.getter(#errorSafety),
        returnValue: false,
      ) as bool);

  @override
  set errorSafety(bool? _errorSafety) => super.noSuchMethod(
        Invocation.setter(
          #errorSafety,
          _errorSafety,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set findProxy(String Function(Uri)? _findProxy) => super.noSuchMethod(
        Invocation.setter(
          #findProxy,
          _findProxy,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addAuthenticator<T>(_i9.RequestModifier<T>? auth) => super.noSuchMethod(
        Invocation.method(
          #addAuthenticator,
          [auth],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addRequestModifier<T>(_i9.RequestModifier<T>? interceptor) =>
      super.noSuchMethod(
        Invocation.method(
          #addRequestModifier,
          [interceptor],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeRequestModifier<T>(_i9.RequestModifier<T>? interceptor) =>
      super.noSuchMethod(
        Invocation.method(
          #removeRequestModifier,
          [interceptor],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addResponseModifier<T>(_i9.ResponseModifier<T>? interceptor) =>
      super.noSuchMethod(
        Invocation.method(
          #addResponseModifier,
          [interceptor],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeResponseModifier<T>(_i9.ResponseModifier<T>? interceptor) =>
      super.noSuchMethod(
        Invocation.method(
          #removeResponseModifier,
          [interceptor],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i2.Response<T>> patch<T>(
    String? url, {
    dynamic body,
    String? contentType,
    Map<String, String>? headers,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
    _i2.Progress? uploadProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #body: body,
            #contentType: contentType,
            #headers: headers,
            #query: query,
            #decoder: decoder,
            #uploadProgress: uploadProgress,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #body: body,
              #contentType: contentType,
              #headers: headers,
              #query: query,
              #decoder: decoder,
              #uploadProgress: uploadProgress,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> post<T>(
    String? url, {
    dynamic body,
    String? contentType,
    Map<String, String>? headers,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
    _i2.Progress? uploadProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #body: body,
            #contentType: contentType,
            #headers: headers,
            #query: query,
            #decoder: decoder,
            #uploadProgress: uploadProgress,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #body: body,
              #contentType: contentType,
              #headers: headers,
              #query: query,
              #decoder: decoder,
              #uploadProgress: uploadProgress,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> request<T>(
    String? url,
    String? method, {
    dynamic body,
    String? contentType,
    Map<String, String>? headers,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
    _i2.Progress? uploadProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [
            url,
            method,
          ],
          {
            #body: body,
            #contentType: contentType,
            #headers: headers,
            #query: query,
            #decoder: decoder,
            #uploadProgress: uploadProgress,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #request,
            [
              url,
              method,
            ],
            {
              #body: body,
              #contentType: contentType,
              #headers: headers,
              #query: query,
              #decoder: decoder,
              #uploadProgress: uploadProgress,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> put<T>(
    String? url, {
    dynamic body,
    String? contentType,
    Map<String, String>? headers,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
    _i2.Progress? uploadProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #body: body,
            #contentType: contentType,
            #headers: headers,
            #query: query,
            #decoder: decoder,
            #uploadProgress: uploadProgress,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #body: body,
              #contentType: contentType,
              #headers: headers,
              #query: query,
              #decoder: decoder,
              #uploadProgress: uploadProgress,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> get<T>(
    String? url, {
    Map<String, String>? headers,
    String? contentType,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {
            #headers: headers,
            #contentType: contentType,
            #query: query,
            #decoder: decoder,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #headers: headers,
              #contentType: contentType,
              #query: query,
              #decoder: decoder,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  _i5.Future<_i2.Response<T>> delete<T>(
    String? url, {
    Map<String, String>? headers,
    String? contentType,
    Map<String, dynamic>? query,
    _i2.Decoder<T>? decoder,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #contentType: contentType,
            #query: query,
            #decoder: decoder,
          },
        ),
        returnValue: _i5.Future<_i2.Response<T>>.value(_FakeResponse_3<T>(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #contentType: contentType,
              #query: query,
              #decoder: decoder,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<T>>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SignInController].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignInController extends _i1.Mock implements _i10.SignInController {
  MockSignInController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Rx<_i8.TextEditingController> get emailTextController =>
      (super.noSuchMethod(
        Invocation.getter(#emailTextController),
        returnValue: _FakeRx_6<_i8.TextEditingController>(
          this,
          Invocation.getter(#emailTextController),
        ),
      ) as _i2.Rx<_i8.TextEditingController>);

  @override
  set emailTextController(
          _i2.Rx<_i8.TextEditingController>? _emailTextController) =>
      super.noSuchMethod(
        Invocation.setter(
          #emailTextController,
          _emailTextController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Rx<_i8.TextEditingController> get passwordTextController =>
      (super.noSuchMethod(
        Invocation.getter(#passwordTextController),
        returnValue: _FakeRx_6<_i8.TextEditingController>(
          this,
          Invocation.getter(#passwordTextController),
        ),
      ) as _i2.Rx<_i8.TextEditingController>);

  @override
  set passwordTextController(
          _i2.Rx<_i8.TextEditingController>? _passwordTextController) =>
      super.noSuchMethod(
        Invocation.setter(
          #passwordTextController,
          _passwordTextController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get passwordVisible => (super.noSuchMethod(
        Invocation.getter(#passwordVisible),
        returnValue: _FakeRxBool_7(
          this,
          Invocation.getter(#passwordVisible),
        ),
      ) as _i2.RxBool);

  @override
  set passwordVisible(_i2.RxBool? _passwordVisible) => super.noSuchMethod(
        Invocation.setter(
          #passwordVisible,
          _passwordVisible,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loading => (super.noSuchMethod(
        Invocation.getter(#loading),
        returnValue: _FakeRxBool_7(
          this,
          Invocation.getter(#loading),
        ),
      ) as _i2.RxBool);

  @override
  set loading(_i2.RxBool? _loading) => super.noSuchMethod(
        Invocation.setter(
          #loading,
          _loading,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  _i11.ButtonType getButtonType() => (super.noSuchMethod(
        Invocation.method(
          #getButtonType,
          [],
        ),
        returnValue: _i11.ButtonType.enable,
      ) as _i11.ButtonType);

  @override
  _i5.Future<void> login() => (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Disposer addListener(_i12.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i12.Disposer);

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i7.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Disposer addListenerId(
    Object? key,
    _i12.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i12.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SignUpController].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignUpController extends _i1.Mock implements _i13.SignUpController {
  MockSignUpController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Rx<_i8.TextEditingController> get emailTextController =>
      (super.noSuchMethod(
        Invocation.getter(#emailTextController),
        returnValue: _FakeRx_6<_i8.TextEditingController>(
          this,
          Invocation.getter(#emailTextController),
        ),
      ) as _i2.Rx<_i8.TextEditingController>);

  @override
  set emailTextController(
          _i2.Rx<_i8.TextEditingController>? _emailTextController) =>
      super.noSuchMethod(
        Invocation.setter(
          #emailTextController,
          _emailTextController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Rx<_i8.TextEditingController> get passwordTextController =>
      (super.noSuchMethod(
        Invocation.getter(#passwordTextController),
        returnValue: _FakeRx_6<_i8.TextEditingController>(
          this,
          Invocation.getter(#passwordTextController),
        ),
      ) as _i2.Rx<_i8.TextEditingController>);

  @override
  set passwordTextController(
          _i2.Rx<_i8.TextEditingController>? _passwordTextController) =>
      super.noSuchMethod(
        Invocation.setter(
          #passwordTextController,
          _passwordTextController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Rx<_i8.TextEditingController> get nameTextController =>
      (super.noSuchMethod(
        Invocation.getter(#nameTextController),
        returnValue: _FakeRx_6<_i8.TextEditingController>(
          this,
          Invocation.getter(#nameTextController),
        ),
      ) as _i2.Rx<_i8.TextEditingController>);

  @override
  set nameTextController(
          _i2.Rx<_i8.TextEditingController>? _nameTextController) =>
      super.noSuchMethod(
        Invocation.setter(
          #nameTextController,
          _nameTextController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get passwordVisible => (super.noSuchMethod(
        Invocation.getter(#passwordVisible),
        returnValue: _FakeRxBool_7(
          this,
          Invocation.getter(#passwordVisible),
        ),
      ) as _i2.RxBool);

  @override
  set passwordVisible(_i2.RxBool? _passwordVisible) => super.noSuchMethod(
        Invocation.setter(
          #passwordVisible,
          _passwordVisible,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get loading => (super.noSuchMethod(
        Invocation.getter(#loading),
        returnValue: _FakeRxBool_7(
          this,
          Invocation.getter(#loading),
        ),
      ) as _i2.RxBool);

  @override
  set loading(_i2.RxBool? _loading) => super.noSuchMethod(
        Invocation.setter(
          #loading,
          _loading,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  _i11.ButtonType getButtonType() => (super.noSuchMethod(
        Invocation.method(
          #getButtonType,
          [],
        ),
        returnValue: _i11.ButtonType.enable,
      ) as _i11.ButtonType);

  @override
  _i5.Future<void> signUp() => (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Disposer addListener(_i12.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i12.Disposer);

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i7.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Disposer addListenerId(
    Object? key,
    _i12.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i12.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}
